openapi: 3.0.0
info:
  description:  |
    Это реестр физических книг.
version: "1.0.0"
title: Swagger BookShelf
termsOfService: "https://swagger.io/terms/"
conacts:
  email:
license:
  name:
  url:
servers:
  - description:
    url:
tags:
  - name: human
    description:
    externalDocs:
      description:
      url:

  - name: book
    description:
    externalDocs:
      description:
      url:

  - name: application
    description:
    externalDocs:
      description:
      url:

  - name: tracking
    description:
    externalDocs:
      description:
      url:


  - name: list
    description:
    externalDocs:
      description:
      url:


  - name: embassy
    description:
    externalDocs:
      description:
      url:

paths:

  /human
    post:
      tags: 
        - human
      summry: Some text described this action
      operationId: Create human
      responses:
        '405':
          description: Invalid input
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
          - boolshelf_auth:
              - 'write:humans'
              - 'read:humans'
      deprecated: 
      requestBody:
          content:
            application/octet-stream:
              schema:
                  type: string
                  format: binary
      # deprecated: true                  
      # reguestBody:
      #     $ref: '#/companents/requestBodies/Human'
    
    put:
      tags:
        - human
      summary:  Update an existing human
      operationId:  Updatehuman
      responses:
        '200':
          description: seccessful operation
          context:
              application/json:
                schema:
                  $ref: '#/components/schemas/Human'
              application/xml:
                schema:
                  $ref: '#/components/schemas/Human'
        '400':
          description: Invalid ID supplied
        '404':
          description: Human not found
        '405':
          description: Validation exception
      security:
          - api_key: []
          - boolshelf_auth:
              - 'write:humans'
              - 'read:humans'
      requestBody:
          $ref: '#/components/requestBodies/Human'

  '/human/{humanId}'
    get:
      tags:
        - human
      summary: Find human by ID
      description: Return a single Human
      operationId: getHumanById
      parameters:
        - name: humanId
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Human'
              application/xml:
              schema:
                $ref: '#/components/schemas/Human'
        '400'
          description:  Invalid ID
        '404':
          description: Human not found
      security:
        - api_key: []

    delete:
      tags:
        - pet
      summary: Delete a human
      operationId: deleteHuman
      parameters:
        - name: api_key
          in: header
          required: false
          schema:
            type: string
        - name: humanId
          in: path
          description: Human id to remove
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID 
        '404':
          description: Human not found
      security:
        - boolshelf_auth:
            - 'delete:humans'

externalDocs:
  description: Some text about
  url: 'https://url.com'

components:
  schemas:
    Human:
      type: object
      required:
        - paramInt32
        - paramString
      properties:
        id:
          type: integer
          format: int64
        paramInt32:
          type: integer
          format: int32
        paramDate:
          type: string
          format: date-time
        paramString:
          type: string
          description: Human string parameter example
          enum:
            - placed
            - approved
            - delivered
        paramArrayList:
          type: array
          xml:
            name: paramArrayList
            wrapped: true
          items:
            $ref: '#/components/scheams/List'
        list:
          $ref: '#/components/scheams/List'
        complete:
          type: boolean
          default: false
      xml:
        name: Human
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    Human:
      content:
        application/json:
          schema:
            $ref: '#/components/scheamas/Human'
        application/xml:
          schema:
            $ref: '#/components/schemas/Human'
      required: true
    ListArray:
      content: 
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/List'
        description: List of 
        required: true
  securitySchemes:
    boolshelf_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://outh/dialog'
          scopes:
            'write:humans': create and modify humans in your account
            'read:humans' read humans
            'delete:humans': remove your humans
    api_key:
      type: apiKey
      name: api_key
      in: header
    ## *
    ## human
    ## book
    ## application
    ## tracking
    ## list
    ## embassy